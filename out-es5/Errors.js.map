{"version":3,"sources":["../out/Errors.js"],"names":["define","require","exports","Object","defineProperty","value","Errors","message","Error","paramName","key","msg","argumentName","fieldName"],"mappings":";;;;;;;;AAAAA,MAAM,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD,EAAyB,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACvD;;AACAC,EAAAA,MAAM,CAACC,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAA7C,EAFuD,CAGvD;;AAHuD,MAIjDC,MAJiD;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAK7BC,OAL6B,EAKpB;AAC3BA,QAAAA,OAAO,GAAGA,OAAO,IAAI,iBAArB;AACA,eAAO,IAAIC,KAAJ,CAAUD,OAAV,CAAP;AACH;AARkD;AAAA;AAAA,mCAS/BE,SAT+B,EASpB;AAC3B,eAAO,IAAID,KAAJ,CAAU,eAAeC,SAAf,GAA2B,oBAArC,CAAP;AACH;AAXkD;AAAA;AAAA,8CAYpB;AAC3B,eAAO,IAAID,KAAJ,CAAU,yCAAV,CAAP;AACH;AAdkD;AAAA;AAAA,0CAexB;AACvB,eAAO,IAAIA,KAAJ,CAAU,sBAAV,CAAP;AACH;AAjBkD;AAAA;AAAA,8CAkBpB;AAC3B,eAAO,IAAIA,KAAJ,CAAU,4BAAV,CAAP;AACH;AApBkD;AAAA;AAAA,8CAqBpB;AAC3B,eAAO,IAAIA,KAAJ,CAAU,4BAAV,CAAP;AACH;AAvBkD;AAAA;AAAA,8CAwBpB;AAC3B,eAAO,IAAIA,KAAJ,CAAU,4BAAV,CAAP;AACH;AA1BkD;AAAA;AAAA,qCA2B7BE,GA3B6B,EA2BxB;AACvB,YAAIC,GAAG,gCAAyBD,GAAzB,qBAAP;AACA,eAAO,IAAIF,KAAJ,CAAUG,GAAV,CAAP;AACH;AA9BkD;AAAA;AAAA,6CA+BrB;AAC1B,YAAIA,GAAG,GAAG,0EAAV;AACA,eAAO,IAAIH,KAAJ,CAAUG,GAAV,CAAP;AACH;AAlCkD;AAAA;AAAA,wCAmC1BC,YAnC0B,EAmCZC,SAnCY,EAmCD;AAC9C,YAAIF,GAAG,sBAAeC,YAAf,cAA+BC,SAA/B,qCAAP;AACA,eAAO,IAAIL,KAAJ,CAAUG,GAAV,CAAP;AACH;AAtCkD;;AAAA;AAAA;;AAwCvDT,EAAAA,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACH,CAzCK,CAAN,C,CA0CA","sourcesContent":["define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    // namespace wuzhui {\n    class Errors {\n        static notImplemented(message) {\n            message = message || \"Not implemented\";\n            return new Error(message);\n        }\n        static argumentNull(paramName) {\n            return new Error(\"Argument '\" + paramName + \"' can not be null.\");\n        }\n        static controllBelonsAnother() {\n            return new Error(\"The control is belongs another control.\");\n        }\n        static columnsCanntEmpty() {\n            return new Error(\"Columns cannt empty.\");\n        }\n        static dataSourceCanntInsert() {\n            return new Error(\"DataSource can not insert.\");\n        }\n        static dataSourceCanntUpdate() {\n            return new Error(\"DataSource can not update.\");\n        }\n        static dataSourceCanntDelete() {\n            return new Error(\"DataSource can not delete.\");\n        }\n        static primaryKeyNull(key) {\n            let msg = `Primary key named '${key}' value is null.`;\n            return new Error(msg);\n        }\n        static queryResultTypeError() {\n            let msg = 'Type of the query result is expected as Array or DataSourceSelectResult.';\n            return new Error(msg);\n        }\n        static argumentFieldNull(argumentName, fieldName) {\n            let msg = `Argument ${argumentName} ${fieldName} field can not be null or empty.`;\n            return new Error(msg);\n        }\n    }\n    exports.Errors = Errors;\n});\n// }\n"],"file":"Errors.js"}