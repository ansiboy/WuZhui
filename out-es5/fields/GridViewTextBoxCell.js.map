{"version":3,"sources":["../../out/fields/GridViewTextBoxCell.js"],"names":["define","require","exports","GridViewEditableCell_1","Object","defineProperty","value","GridViewTextBoxCell","field","dataItem","valueType","_valueType","dataField","Date","control","document","createElement","undefined","name","text","element","querySelector","Number","valueOf","GridViewEditableCell"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAAC,CAAC,SAAD,EAAY,SAAZ,EAAuB,wBAAvB,CAAD,EAAmD,UAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,sBAA5B,EAAoD;AACzG;;AACAC,EAAAA,MAAM,CAACC,cAAP,CAAsBH,OAAtB,EAA+B,YAA/B,EAA6C;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAA7C;;AAFyG,MAGnGC,mBAHmG;AAAA;AAAA;AAAA;;AAIrG,iCAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwC;AAAA;;AAAA;;AACpC,+FAAMF,KAAN,EAAaC,QAAb;AACA,YAAKE,UAAL,GAAkBD,SAAlB;;AACA,UAAI,CAAC,MAAKC,UAAV,EAAsB;AAClB,YAAIL,KAAK,GAAGG,QAAQ,CAACD,KAAK,CAACI,SAAP,CAApB;AACA,YAAIN,KAAK,YAAYO,IAArB,EACI,MAAKF,UAAL,GAAkB,MAAlB,CADJ,KAGI,MAAKA,UAAL,WAAyBL,KAAzB;AACP;;AATmC;AAUvC;;AAdoG;AAAA;AAAA,oCAevFA,KAfuF,EAehF;AACjB,YAAIQ,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,QAAAA,OAAO,CAACR,KAAR,GAAgBA,KAAK,KAAKW,SAAV,GAAsB,EAAtB,aAA8BX,KAA9B,CAAhB;AACAQ,QAAAA,OAAO,CAACI,IAAR,GAAe,KAAKV,KAAL,CAAWI,SAA1B;AACA,eAAOE,OAAP;AACH;AApBoG;AAAA;AAAA,0BAqBlF;AACf,YAAIK,IAAI,GAAG,KAAKC,OAAL,CAAaC,aAAb,CAA2B,OAA3B,EAAoCf,KAA/C;;AACA,gBAAQ,KAAKK,UAAb;AACI,eAAK,QAAL;AACI,mBAAO,IAAIW,MAAJ,CAAWH,IAAX,EAAiBI,OAAjB,EAAP;;AACJ,eAAK,MAAL;AACI,mBAAO,IAAIV,IAAJ,CAASM,IAAT,CAAP;;AACJ;AACI,mBAAOA,IAAP;AANR;AAQH;AA/BoG;;AAAA;AAAA,IAGvEhB,sBAAsB,CAACqB,oBAHgD;;AAiCzGtB,EAAAA,OAAO,CAACK,mBAAR,GAA8BA,mBAA9B;AACH,CAlCK,CAAN","sourcesContent":["define([\"require\", \"exports\", \"./GridViewEditableCell\"], function (require, exports, GridViewEditableCell_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class GridViewTextBoxCell extends GridViewEditableCell_1.GridViewEditableCell {\n        constructor(field, dataItem, valueType) {\n            super(field, dataItem);\n            this._valueType = valueType;\n            if (!this._valueType) {\n                let value = dataItem[field.dataField];\n                if (value instanceof Date)\n                    this._valueType = 'date';\n                else\n                    this._valueType = typeof value;\n            }\n        }\n        createControl(value) {\n            let control = document.createElement(\"input\");\n            control.value = value === undefined ? \"\" : `${value}`;\n            control.name = this.field.dataField;\n            return control;\n        }\n        get controlValue() {\n            var text = this.element.querySelector('input').value;\n            switch (this._valueType) {\n                case 'number':\n                    return new Number(text).valueOf();\n                case 'date':\n                    return new Date(text);\n                default:\n                    return text;\n            }\n        }\n    }\n    exports.GridViewTextBoxCell = GridViewTextBoxCell;\n});\n"],"file":"GridViewTextBoxCell.js"}