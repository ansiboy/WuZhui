{"version":3,"sources":["../../out/fields/GridViewEditableCell.js"],"names":["GridViewEditableCell","field","dataItem","Errors","argumentNull","dataField","nullText","dataFormatString","_field","_dataItem","_mode","readOnly","render","element","innerHTML","createControl","console","assert","control","value","controlStyle","appendChild","GridViewDataCell"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IACaA,oB;;;;;AACT,gCAAYC,KAAZ,EAAmBC,QAAnB,EAA6B;AAAA;;AAAA;;AACzB,QAAID,KAAK,IAAI,IAAb,EACI,MAAME,eAAOC,YAAP,CAAoB,OAApB,CAAN;AACJ,QAAIF,QAAQ,IAAI,IAAhB,EACI,MAAMC,eAAOC,YAAP,CAAoB,UAApB,CAAN;AACJ,8FAAM;AACFC,MAAAA,SAAS,EAAEJ,KAAK,CAACI,SADf;AAEFC,MAAAA,QAAQ,EAAEL,KAAK,CAACK,QAFd;AAEwBC,MAAAA,gBAAgB,EAAEN,KAAK,CAACM;AAFhD,KAAN;AAIA,UAAKC,MAAL,GAAcP,KAAd;AACA,UAAKQ,SAAL,GAAiBP,QAAjB;AACA,UAAKQ,KAAL,GAAa,MAAb;AAXyB;AAY5B;;;;gCAUW;AACR,UAAI,KAAKF,MAAL,CAAYG,QAAhB,EAA0B;AACtB;AACH;;AACD,WAAKD,KAAL,GAAa,MAAb;AACA,WAAKE,MAAL,CAAY,KAAKH,SAAjB;AACH;;;8BACS;AACN,UAAI,KAAKD,MAAL,CAAYG,QAAhB,EAA0B;AACtB;AACH;;AACD,WAAKD,KAAL,GAAa,MAAb;AACA,WAAKE,MAAL,CAAY,KAAKH,SAAjB;AACH;;;iCACY;AACT,UAAI,KAAKD,MAAL,CAAYG,QAAhB,EAA0B;AACtB;AACH;;AACD,WAAKD,KAAL,GAAa,MAAb;AACA,WAAKE,MAAL,CAAY,KAAKH,SAAjB;AACH;;;2BACMP,Q,EAAU;AACb,UAAI,KAAKQ,KAAL,IAAc,MAAlB,EAA0B;AACtB,aAAKG,OAAL,CAAaC,SAAb,GAAyB,EAAzB;AACA,aAAKC,aAAL;AACAC,QAAAA,OAAO,CAACC,MAAR,CAAe,KAAKC,OAAL,IAAgB,IAA/B;AACA,YAAIC,KAAK,GAAGjB,QAAQ,CAAC,KAAKD,KAAL,CAAWI,SAAZ,CAApB;AACA,aAAKa,OAAL,CAAaC,KAAb,GAAqBA,KAArB;AACA,iCAAW,KAAKD,OAAL,CAAaL,OAAxB,EAAiC,KAAKL,MAAL,CAAYY,YAA7C;AACA,aAAKP,OAAL,CAAaQ,WAAb,CAAyB,KAAKH,OAAL,CAAaL,OAAtC;AACA;AACH,OAVY,CAWb;;;AACA,uFAAaX,QAAb;AACH;;;oCACe;AACZ,WAAKgB,OAAL,GAAe,KAAKjB,KAAL,CAAWc,aAAX,EAAf;AACA,aAAO,KAAKG,OAAL,CAAaL,OAApB;AACH;;;wBA/Cc;AACX,aAAO,KAAKJ,SAAZ;AACH;;;wBACW;AACR,aAAO,KAAKD,MAAZ;AACH;;;wBACU;AACP,aAAO,KAAKE,KAAZ;AACH;;;wBAwCkB;AACf,UAAI,KAAKQ,OAAL,IAAgB,IAApB,EACI,OAAO,IAAP;AACJ,aAAO,KAAKA,OAAL,CAAaC,KAApB;AACH;;;;EAlEqCG,kC","sourcesContent":["import { GridViewDataCell } from \"./DataControlField\";\r\nimport { Errors } from \"../Errors\";\r\nimport { applyStyle } from \"../Utility\";\r\nexport class GridViewEditableCell extends GridViewDataCell {\r\n    constructor(field, dataItem) {\r\n        if (field == null)\r\n            throw Errors.argumentNull('field');\r\n        if (dataItem == null)\r\n            throw Errors.argumentNull('dataItem');\r\n        super({\r\n            dataField: field.dataField,\r\n            nullText: field.nullText, dataFormatString: field.dataFormatString\r\n        });\r\n        this._field = field;\r\n        this._dataItem = dataItem;\r\n        this._mode = 'read';\r\n    }\r\n    get dataItem() {\r\n        return this._dataItem;\r\n    }\r\n    get field() {\r\n        return this._field;\r\n    }\r\n    get mode() {\r\n        return this._mode;\r\n    }\r\n    beginEdit() {\r\n        if (this._field.readOnly) {\r\n            return;\r\n        }\r\n        this._mode = 'edit';\r\n        this.render(this._dataItem);\r\n    }\r\n    endEdit() {\r\n        if (this._field.readOnly) {\r\n            return;\r\n        }\r\n        this._mode = 'read';\r\n        this.render(this._dataItem);\r\n    }\r\n    cancelEdit() {\r\n        if (this._field.readOnly) {\r\n            return;\r\n        }\r\n        this._mode = 'read';\r\n        this.render(this._dataItem);\r\n    }\r\n    render(dataItem) {\r\n        if (this._mode == 'edit') {\r\n            this.element.innerHTML = \"\";\r\n            this.createControl();\r\n            console.assert(this.control != null);\r\n            let value = dataItem[this.field.dataField];\r\n            this.control.value = value;\r\n            applyStyle(this.control.element, this._field.controlStyle);\r\n            this.element.appendChild(this.control.element);\r\n            return;\r\n        }\r\n        // this.control = null;\r\n        super.render(dataItem);\r\n    }\r\n    createControl() {\r\n        this.control = this.field.createControl();\r\n        return this.control.element;\r\n    }\r\n    get controlValue() {\r\n        if (this.control == null)\r\n            return null;\r\n        return this.control.value;\r\n    }\r\n}\r\n"],"file":"GridViewEditableCell.js"}