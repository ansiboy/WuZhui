{"version":3,"sources":["../../out/fields/BoundField.js"],"names":["define","require","exports","DataControlField_1","GridViewTextBoxCell_1","Object","defineProperty","value","BoundField","dataItem","cell","GridViewTextBoxCell","params","valueType","style","itemStyle","nullText","dataField","dataFormatString","controlStyle","readOnly","DataControlField"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACAA,MAAM,CAAC,CAAC,SAAD,EAAY,SAAZ,EAAuB,oBAAvB,EAA6C,uBAA7C,CAAD,EAAwE,UAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,kBAA5B,EAAgDC,qBAAhD,EAAuE;AACjJ;;AACAC,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,OAAtB,EAA+B,YAA/B,EAA6C;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAA7C;;AAFiJ,MAG3IC,UAH2I;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAiB9HC,QAjB8H,EAiBpH;AACrB,YAAIC,IAAI,GAAG,IAAIN,qBAAqB,CAACO,mBAA1B,CAA8C,IAA9C,EAAoDF,QAApD,EAA8D,KAAKG,MAAL,CAAYC,SAA1E,CAAX;AACAH,QAAAA,IAAI,CAACI,KAAL,CAAW,KAAKC,SAAhB;AACA,eAAOL,IAAP;AACH;AACD;;;;AAtB6I;AAAA;AAI7I;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAX6I,0BAc9H;AACX,eAAO,KAAKE,MAAL,CAAYI,QAAnB;AACH;AAhB4I;AAAA;AAAA,0BAyB7H;AACZ,eAAO,KAAKJ,MAAL,CAAYK,SAAnB;AACH;AACD;;;;AA5B6I;AAAA;AAAA,0BA+BtH;AACnB,eAAO,KAAKL,MAAL,CAAYM,gBAAnB;AACH;AAjC4I;AAAA;AAAA,0BAkC1H;AACf,eAAO,KAAKN,MAAL,CAAYO,YAAnB;AACH;AApC4I;AAAA;AAAA,0BAqC9H;AACX,eAAO,KAAKP,MAAL,CAAYQ,QAAnB;AACH;AAvC4I;;AAAA;AAAA,IAGxHjB,kBAAkB,CAACkB,gBAHqG;;AAyCjJnB,EAAAA,OAAO,CAACM,UAAR,GAAqBA,UAArB;AACH,CA1CK,CAAN","sourcesContent":["/// <reference path=\"DataControlField.ts\"/>\ndefine([\"require\", \"exports\", \"./DataControlField\", \"./GridViewTextBoxCell\"], function (require, exports, DataControlField_1, GridViewTextBoxCell_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class BoundField extends DataControlField_1.DataControlField {\n        // constructor(params: BoundFieldParams<T>) {\n        //     super(params);\n        //     this._params = params;\n        // }\n        // private params(): BoundFieldParams<T> {\n        //     return <BoundFieldParams<T>>this._params;\n        // }\n        /**\n         * Gets the caption displayed for a field when the field's value is null.\n         */\n        get nullText() {\n            return this.params.nullText;\n        }\n        createItemCell(dataItem) {\n            let cell = new GridViewTextBoxCell_1.GridViewTextBoxCell(this, dataItem, this.params.valueType);\n            cell.style(this.itemStyle);\n            return cell;\n        }\n        /**\n         * Gets the field for the value.\n         */\n        get dataField() {\n            return this.params.dataField;\n        }\n        /**\n         * Gets the string that specifies the display format for the value of the field.\n         */\n        get dataFormatString() {\n            return this.params.dataFormatString;\n        }\n        get controlStyle() {\n            return this.params.controlStyle;\n        }\n        get readOnly() {\n            return this.params.readOnly;\n        }\n    }\n    exports.BoundField = BoundField;\n});\n"],"file":"BoundField.js"}