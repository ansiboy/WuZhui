{"version":3,"sources":["../out/TextBox.js"],"names":["TextBox","params","Errors","argumentNull","element","argumentFieldNull","dataField","dataItem","valueType","value","onchange","Number","parseInt","parseFloat","Control"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;IACaA,O;;;;;AACT,mBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,QAAIA,MAAM,IAAI,IAAd,EACI,MAAMC,eAAOC,YAAP,CAAoB,QAApB,CAAN;AACJ,QAAI,CAACF,MAAM,CAACG,OAAZ,EACI,MAAMF,eAAOG,iBAAP,CAAyB,QAAzB,EAAmC,SAAnC,CAAN;AACJ,QAAI,CAACJ,MAAM,CAACK,SAAZ,EACI,MAAMJ,eAAOG,iBAAP,CAAyB,QAAzB,EAAmC,WAAnC,CAAN;AACJ,QAAI,CAACJ,MAAM,CAACM,QAAZ,EACI,MAAML,eAAOG,iBAAP,CAAyB,QAAzB,EAAmC,UAAnC,CAAN;AACJ,QAAI,CAACJ,MAAM,CAACO,SAAZ,EACI,MAAMN,eAAOG,iBAAP,CAAyB,QAAzB,EAAmC,WAAnC,CAAN;AACJ,iFAAMJ,MAAM,CAACG,OAAb;AAXgB,QAYVA,OAZU,GAYkCH,MAZlC,CAYVG,OAZU;AAAA,QAYDE,SAZC,GAYkCL,MAZlC,CAYDK,SAZC;AAAA,QAYUC,QAZV,GAYkCN,MAZlC,CAYUM,QAZV;AAAA,QAYoBC,SAZpB,GAYkCP,MAZlC,CAYoBO,SAZpB;AAahB,QAAIC,KAAK,GAAGF,QAAQ,CAACD,SAAD,CAApB;AACAF,IAAAA,OAAO,CAACK,KAAR,aAAmBA,KAAnB;;AACAL,IAAAA,OAAO,CAACM,QAAR,GAAmB,YAAM;AACrB,UAAIF,SAAS,IAAI,KAAjB,EAAwB;AACpBD,QAAAA,QAAQ,CAACD,SAAD,CAAR,GAAsBK,MAAM,CAACC,QAAP,CAAgBR,OAAO,CAACK,KAAxB,CAAtB;AACH,OAFD,MAGK,IAAID,SAAS,IAAI,OAAjB,EAA0B;AAC3BD,QAAAA,QAAQ,CAACD,SAAD,CAAR,GAAsBK,MAAM,CAACE,UAAP,CAAkBT,OAAO,CAACK,KAA1B,CAAtB;AACH,OAFI,MAGA;AACDF,QAAAA,QAAQ,CAACD,SAAD,CAAR,GAAuBF,OAAO,CAACK,KAAR,IAAiB,EAAxC;AACH;AACJ,KAVD;;AAfgB;AA0BnB;;;EA3BwBK,iB","sourcesContent":["import { Control } from \"./Control\";\r\nimport { Errors } from \"./Errors\";\r\nexport class TextBox extends Control {\r\n    constructor(params) {\r\n        if (params == null)\r\n            throw Errors.argumentNull(\"params\");\r\n        if (!params.element)\r\n            throw Errors.argumentFieldNull(\"params\", \"element\");\r\n        if (!params.dataField)\r\n            throw Errors.argumentFieldNull(\"params\", \"dataField\");\r\n        if (!params.dataItem)\r\n            throw Errors.argumentFieldNull(\"params\", \"dataItem\");\r\n        if (!params.valueType)\r\n            throw Errors.argumentFieldNull(\"params\", \"valuetype\");\r\n        super(params.element);\r\n        let { element, dataField, dataItem, valueType } = params;\r\n        let value = dataItem[dataField];\r\n        element.value = `${value}`;\r\n        element.onchange = () => {\r\n            if (valueType == 'int') {\r\n                dataItem[dataField] = Number.parseInt(element.value);\r\n            }\r\n            else if (valueType == 'float') {\r\n                dataItem[dataField] = Number.parseFloat(element.value);\r\n            }\r\n            else {\r\n                dataItem[dataField] = (element.value || \"\");\r\n            }\r\n        };\r\n    }\r\n}\r\n"],"file":"TextBox.js"}